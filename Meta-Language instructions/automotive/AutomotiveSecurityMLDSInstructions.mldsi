{
  "title": "Security Meta Language",
  "description": "Dieses Schema ermöglicht es, ein Security-Modell in MLDS abzubilden, das sämtliche Entitäten (Attack, AttackMotivation, Item, Asset, Vulnerability, ThreatScenario, DamageScenario, SecurityConcept, SecurityGoal, Hazard und Requirement) samt ihren Properties.",
  "type": "object",
  "properties": {
    "security": {
      "type": "object",
      "description": "Haupteintrag des Sicherheitsmodells.",
      "required": [
        "ShortName",
        "Name",
        "Description"
      ],
      "properties": {
        "ShortName": {
          "type": "string",
          "description": "Kurzname des Sicherheitsmodells."
        },
        "Name": {
          "type": "string",
          "description": "Längerer Name des Sicherheitsmodells."
        },
        "Description": {
          "type": "string",
          "description": "Gesamte Beschreibung des Sicherheitsmodells."
        },
        "attacks": {
          "type": "array",
          "description": "Liste der konkreten Angriffe. Ein Angriff wird als Teil eines Angriffbaums modelliert und verweist zwingend auf mindestens eine zugehörige Vulnerability.",
          "minItems": 1,
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Attack" }
        },
        "attackMotivations": {
          "type": "array",
          "description": "Liste der Angriffsmotivationen, die abstrakte Motivationen und deren konkrete Spezialisierungen (Angriffe) zusammenfassen. Neben den eigenen Eigenschaften enthalten sie Referenzen auf untergeordnete Angriffe, untergeordnete Motivationen und Ziel-Items.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/AttackMotivation" }
        },
        "items": {
          "type": "array",
          "description": "Liste der Items, die als Features oder Komponenten im Kontext eines Angriffs dienen.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Item" }
        },
        "assets": {
          "type": "array",
          "description": "Liste der Assets, d.h. schützenswerte Objekte im System.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Asset" }
        },
        "vulnerabilities": {
          "type": "array",
          "description": "Liste der Schwachstellen, die ausgenutzt werden können, um Angriffe zu realisieren.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Vulnerability" }
        },
        "threatScenarios": {
          "type": "array",
          "description": "Liste der Bedrohungsszenarien, die sich aus der Kombination von Vulnerabilities und Angriffen ergeben.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/ThreatScenario" }
        },
        "damageScenarios": {
          "type": "array",
          "description": "Liste der Schadensszenarien, d.h. der unerwünschten Konsequenzen, die aus erfolgreichen Angriffen resultieren. Jeder Schadensszenario verweist auf die zugrundeliegenden Angriffsmotivationen.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/DamageScenario" }
        },
        "securityConcepts": {
          "type": "array",
          "description": "Liste der Sicherheitskonzepte, welche Maßnahmen und Anforderungen zur Erreichung definierter Schutzziele zusammenfassen.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/SecurityConcept" }
        },
        "securityGoals": {
          "type": "array",
          "description": "Liste der Sicherheitsziele, die spezifische Schutzanforderungen an das System formulieren und auf zu erfüllende Requirements verweisen.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/SecurityGoal" }
        },
        "hazards": {
          "type": "array",
          "description": "Liste der Gefahren, die potenziell zu Sicherheitsvorfällen führen können.",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/Hazard" }
        }
      }
    }
  },
  "required": ["security"],
  "definitions": {
    "Attack": {
      "type": "object",
      "description": "The metaclass Attack represents a cyber-physical attack on the system, as well as social engineering attacks on human actors or attacks on processes. Attacks can have multiple subattacks. It is intended to be part of an attack tree, were the topmost elements are attack motivations and the bottom elements of the attack tree are attacks, i.e., the upper part of the attack tree consists of one root attack motivation that is broken down into fine-grained submotivations; the bottom part of the attack tree comprises the concrete attacks as fine-grained attack motivations. The syntax of AttackMotivations is inspired by the concept of security attack trees and attack vectors.",
      "required": [
        "ShortName",
        "Name",
        "AccessRequired",
        "AttackComplexity",
        "PrivilegesRequired",
        "Urgency",
        "UserInteraction",
        "AvailabilityImpact",
        "ConfidentialityImpact",
        "IntegrityImpact",
        "SafetyRelevance",
        "vulnerabilities"
      ],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Angriffs." },
        "Name": { "type": "string", "description": "Detailierter Name des Angriffs, z. B. '1.1 Connect to Vehicle'." },
        "AccessRequired": {
          "type": "string",
          "description": "This metric reflects the context by which vulnerability exploitation is possible. This metric value (and consequently the Base score) will be larger the more remote (logically, and physically) an attacker can be in order to exploit the vulnerable component. The assumption is that the number of potential attackers for a vulnerability that could be exploited from across the Internet is larger than the number of potential attackers that could exploit a vulnerability requiring physical access to a device, and therefore warrants a greater score.",
          "enum": ["Network", "Adjacent", "Local", "Physical"]
        },
        "AttackComplexity": {
          "type": "string",
          "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability. As described below, such conditions may require the collection of more information about the target, the presence of certain system configuration settings, or computational exceptions. Importantly, the assessment of this metric excludes any requirements for user interaction in order to exploit the vulnerability (such conditions are captured in the User Interaction metric). This metric value is largest for the least complex attacks.",
          "enum": ["(L)ow", "(H)igh"]
        },
        "PrivilegesRequired": {
          "type": "string",
          "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability. This metric is greatest if no privileges are required.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "Urgency": {
          "type": "string",
          "description": "In SAM, urgency describes an attribute of an attack. The context is determined by the type of attack. In a social engineering attack, for example, urgency is an attribute that the attacker can exploit to induce a victim to act rashly. In the case of attacks on systems, the urgency implies, for example, the existence of so-called race conditions during the execution of code that can be exploited.",
          "enum": ["(X)Not Defined", "(N)one", "(L)ow", "(H)igh"]
        },
        "UserInteraction": {
          "type": "string",
          "description": "This metric captures the requirement for a user, other than the attacker, to participate in the successful compromise of the vulnerable component. This metric determines whether the vulnerability can be exploited solely at the will of the attacker, or whether a separate user (or user-initiated process) must participate in some manner. This metric value is greatest when no user interaction is required.",
          "enum": ["(N)one", "(R)equired"]
        },
        "AvailabilityImpact": {
          "type": "string",
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability. While the Confidentiality and Integrity impact metrics apply to the loss of confidentiality or integrity of data (e.g., information, files) used by the impacted component, this metric refers to the loss of availability of the impacted component itself, such as a networked service (e.g., web, database, email). Since availability refers to the accessibility of information resources, attacks that consume network bandwidth, processor cycles, or disk space all impact the availability of an impacted component.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "ConfidentialityImpact": {
          "type": "string",
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component or a manual file storage due to a successfully exploited vulnerability. Confidentiality refers to limiting information access and disclosure to only authorized users, as well as preventing access by, or disclosure to, unauthorized ones.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "IntegrityImpact": {
          "type": "string",
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability. Integrity refers to the trustworthiness and veracity of information.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "SafetyRelevance": {
          "type": "string",
          "description": "This metric measures if there is safety hazard and if it is handled.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "TampersSecurityProperties": {
          "type": "object",
          "description": "This metric determines which security property is attacked based on the enumeration.",
          "properties": {
            "Confidentiality": { "type": "boolean", "description": "Wird die Vertraulichkeit beeinträchtigt?" },
            "Integrity": { "type": "boolean", "description": "Wird die Integrität beeinträchtigt?" },
            "Availability": { "type": "boolean", "description": "Wird die Verfügbarkeit beeinträchtigt?" },
            "Authenticity": { "type": "boolean", "description": "Wird die Authentizität beeinträchtigt?" },
            "Reliability": { "type": "boolean", "description": "Wird die Zuverlässigkeit beeinträchtigt?" },
            "Accountability": { "type": "boolean", "description": "Wird die Rückverfolgbarkeit beeinträchtigt?" }
          }
        },
        "ExternalReference": {
          "type": "string",
          "description": "Externe Referenz, z. B. zu weiterführenden Dokumenten."
        },
        "Description": {
          "type": "string",
          "description": "Weitere Beschreibung des Angriffs, z. B. anhand des zugrunde liegenden Angriffvektors."
        },
        "vulnerabilities": {
          "type": "array",
          "description": "Liste der Vulnerabilities, die von diesem Angriff ausgenutzt werden können.",
          "minItems": 1,
          "items": { "$ref": "#/definitions/Vulnerability" }
        }
      }
    },
    "AttackMotivation": {
      "type": "object",
      "description": "The abstract metaclass AttackMotivation abstracts the motivation of an attacker and the concrete attack (an attack is a motivation in itself). It is intended to be part of an attack tree, were the topmost elements are attack motivations and the bottom elements of the attack tree are attacks, i.e., the upper part of the attack tree consists of one root attack motivation that is broken down into fine-grained submotivations; the bottom part of the attack tree comprises the concrete attacks as fine-grained attack motivations. The syntax of AttackMotivations is inspired by the concept of security attack trees and attack vectors.",
      "required": [
        "ShortName",
        "Name",
        "Motivation",
        "ConfidentialityImpact",
        "IntegrityImpact",
        "AvailabilityImpact",
        "SafetyRelevance"
      ],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname der Angriffsmotivation." },
        "Name": { "type": "string", "description": "Ausführlicher Name bzw. Beschreibung der Motivation." },
        "Motivation": {
          "type": "string",
          "description": "Gibt die Art der Motivation an, z. B. Harm, Financial Gain, Product Modification oder Information Retrieval.",
          "enum": ["Harm", "Financial Gain", "Product Modification", "Information Retrieval"]
        },
        "ConfidentialityImpact": {
          "type": "string",
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component or a manual file storage due to a successfully exploited vulnerability. Confidentiality refers to limiting information access and disclosure to only authorized users, as well as preventing access by, or disclosure to, unauthorized ones.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "IntegrityImpact": {
          "type": "string",
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability. Integrity refers to the trustworthiness and veracity of information.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "AvailabilityImpact": {
          "type": "string",
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability. While the Confidentiality and Integrity impact metrics apply to the loss of confidentiality or integrity of data (e.g., information, files) used by the impacted component, this metric refers to the loss of availability of the impacted component itself, such as a networked service (e.g., web, database, email). Since availability refers to the accessibility of information resources, attacks that consume network bandwidth, processor cycles, or disk space all impact the availability of an impacted component.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "SafetyRelevance": {
          "type": "string",
          "description": "This metric measures if there is safety hazard and if it is handled.",
          "enum": ["(N)one", "(L)ow", "(H)igh"]
        },
        "ExternalReference": {
          "type": "string",
          "description": "Externe Referenz zu weiterführenden Informationen."
        },
        "Description": {
          "type": "string",
          "description": "Detailierte Beschreibung der Angriffsmotivation."
        },
        "attacks": {
          "type": "array",
          "description": "Liste konkreter Angriffe, die als Teil dieser Motivation modelliert werden.",
          "items": { "$ref": "#/definitions/Attack" }
        },
        "subMotivations": {
          "type": "array",
          "description": "Liste von Untermotivation(en), falls die Motivation weiter verfeinert wird.",
          "items": { "$ref": "#/definitions/AttackMotivation" }
        },
        "parentMotivation": {
          "description": "Verweist auf die übergeordnete Motivation, falls vorhanden.",
          "$ref": "#/definitions/AttackMotivation"
        },
        "targetItems": {
          "type": "array",
          "description": "Liste der Items, die als Ziel(e) dieser Motivation definiert sind.",
          "minItems": 1,
          "items": { "$ref": "#/definitions/Item" }
        }
      }
    },
    "Item": {
      "type": "object",
      "description": "The Item entity identifies the scope of safety information and the safety assessment, i.e. the part of the system onto which the ISO26262 related information applies. Safety analyses are carried out on the basis of an item definition and the safety concepts are derived from it.",
      "required": ["ShortName", "DevelopmentCategory"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Items." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Items." },
        "DevelopmentCategory": {
          "type": "string",
          "description": "The Item entity identifies the scope of safety information and the safety assessment, i.e. the part of the system onto which the ISO26262 related information applies. Safety analyses are carried out on the basis of an item definition and the safety concepts are derived from it.",
          "enum": ["New", "Modification"]
        },
        "VehicleFeatures": {
          "type": "array",
          "description": "Liste zugehöriger Fahrzeugmerkmale, falls vorhanden. VehicleFeature represents a special kind of feature intended for use on Vehicle Level. The main difference to features in general is that they provide support for the multi-level concept (via their DeviationAttributeSet) and several additional attributes with meta-information specific to the vehicle level viewpoint.",
          "items": { "type": "string" }
        },
        "ExternalReference": { "type": "string", "description": "Externe Referenz zu weiterführenden Informationen." },
        "Text": { "type": "string", "description": "Freitextbeschreibung oder Detailinformationen." }
      }
    },
    "Asset": {
      "type": "object",
      "description": "Repräsentiert ein Asset, also ein schützenswertes Objekt im System. Asset ist der zu schützende Teilbestand eines Targets.",
      "required": ["ShortName", "Name"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Assets." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Assets." },
        "ProtectionGoals": {
          "type": "object",
          "description": "Definiert die angestrebten Schutzziele für das Asset.",
          "properties": {}
        },
        "ExternalReference": { "type": "string", "description": "Externe Referenz." },
        "Description": { "type": "string", "description": "Weitere Beschreibung des Assets." }
      }
    },
    "Vulnerability": {
      "type": "object",
      "description": "Weakness in an information system, system security procedures, internal controls, or implementation that could be exploited or triggered by a threat source.",
      "required": [
        "ShortName",
        "Name",
        "Scope",
        "ExploitCodeMaturity",
        "RemediationLevel",
        "ReportConfidence",
        "SecurityProcedureConcept",
        "ExternalReference"
      ],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname der Vulnerability." },
        "Name": { "type": "string", "description": "Detailierter Name der Vulnerability." },
        "Scope": {
          "type": "string",
          "description": "Gibt an, ob sich der Geltungsbereich bei Ausnutzung ändert.",
          "enum": ["(U)nchanged", "(C)hanged"]
        },
        "ExploitCodeMaturity": {
          "type": "string",
          "description": "This metric measures the likelihood of the vulnerability being attacked, and is typically based on the current state of exploit techniques, exploit code availability, or active, in-the-wild exploitation. Public availability of easy-to-use exploit code increases the number of potential attackers by including those who are unskilled, thereby increasing the severity of the vulnerability. Initially, real-world exploitation may only be theoretical. Publication of proof-of-concept code, functional exploit code, or sufficient technical details necessary to exploit the vulnerability may follow. Furthermore, the exploit code available may progress from a proof-of-concept demonstration to exploit code that is successful in exploiting the vulnerability consistently. In severe cases, it may be delivered as the payload of a network-based worm or virus or other automated attack tools.",
          "enum": ["(X)Not Defined", "(U)nproven", "(P)roof-of-Concept", "(F)unctional", "(H)igh"]
        },
        "RemediationLevel": {
          "type": "string",
          "description": "The Remediation Level of a vulnerability is an important factor for prioritization. The typical vulnerability is unpatched when initially published. Workarounds or hotfixes may offer interim remediation until an official patch, upgrade or a counter measure is issued. Each of these respective stages adjusts the temporal score downwards, reflecting the decreasing urgency as remediation becomes final.",
          "enum": ["(X)Not Defined", "(O)fficial Fix", "(T)emporary Fix", "(W)orkaround", "(U)navailable"]
        },
        "ReportConfidence": {
          "type": "string",
          "description": "This metric measures the degree of confidence in the existence of the vulnerability and the credibility of the known technical details. Sometimes only the existence of vulnerabilities are publicized, but without specific details. For example, an impact may be recognized as undesirable, but the root cause may not be known. The vulnerability may later be corroborated by research which suggests where the vulnerability may lie, though the research may not be certain. Finally, a vulnerability may be confirmed through acknowledgement by the author or vendor of the affected technology. The urgency of a vulnerability is higher when a vulnerability is known to exist with certainty. This metric also suggests the level of technical knowledge available to would-be attackers.",
          "enum": ["(X)Not Defined", "(U)nknown", "(R)easonable", "(C)onfirmed"]
        },
        "SecurityProcedureFlaw": {
          "type": "string",
          "description": "A security procedure flaw can create a significant vulnerability if it contains deficiencies, particularly when the security protocol is incomplete or its enforcement cannot be ensured. For example, when an employee leaves the company, they may forget to deactivate their access credentials or revoke authorization for the use of company assets, such as credit cards. This lapse can lead to unauthorized access or misuse, either by the employee themselves—through negligence—or by an attacker who exploits the oversight. Such weaknesses in procedure can cause both intentional and unintentional damage."
        },
        "ExternalReference": {
          "type": "string",
          "description": "Externe Referenz, z. B. zu CVE-Einträgen oder weiterführender Dokumentation."
        },
        "Description": {
          "type": "string",
          "description": "Weitere Beschreibung der Schwachstelle."
        }
      }
    },
    "ThreatScenario": {
      "type": "object",
      "description": "Repräsentiert ein Bedrohungsszenario, das aus der Kombination von Vulnerabilities und Angriffen resultiert. Threat scenarios shall be identified and include: targeted asset; compromised cybersecurity property of the asset; and cause of compromise of the cybersecurity property.",
      "required": ["ShortName", "Name"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Threat Scenarios." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Threat Scenarios." },
        "Description": { "type": "string", "description": "Weitere Beschreibung des Bedrohungsszenarios." }
      }
    },
    "DamageScenario": {
      "type": "object",
      "description": "Repräsentiert ein Schadensszenario, das als Konsequenz erfolgreicher Angriffe auftreten kann.",
      "required": ["ShortName", "Name"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Schadensszenarios." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Schadensszenarios." },
        "ImpactRatingScore": {
          "type": "string",
          "description": "Bewertung des Schadenausmaßes.",
          "enum": ["Severe", "Major", "Moderate", "Negligible"]
        },
        "Description": { "type": "string", "description": "Weitere Beschreibung des Schadensszenarios." },
        "attackMotivations": {
          "type": "array",
          "description": "Liste der Angriffsmotivationen, die zu diesem Schadensszenario geführt haben.",
          "minItems": 1,
          "items": { "$ref": "#/definitions/AttackMotivation" }
        }
      }
    },
    "SecurityConcept": {
      "type": "object",
      "description": "Represents the set of security requirements that together fulfill a SecurityGoal, e.g., according to Com-Criteria (CC) ISO/IEC 15408.",
      "required": ["ShortName", "Name"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Sicherheitskonzepts." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Sicherheitskonzepts." },
        "ConsequencesForQuality": {
          "type": "string",
          "description": "Beschreibt Folgen für Qualität, z. B. hinsichtlich Performance oder Usability."
        },
        "MotivatedByStandard": { "type": "boolean", "description": "Gibt an, ob das Konzept durch einen Standard motiviert ist." },
        "MotivatedByCertification": { "type": "boolean", "description": "Gibt an, ob das Konzept durch Zertifizierungsanforderungen motiviert ist." },
        "MotivatedByDocumentedAttacks": { "type": "boolean", "description": "Gibt an, ob dokumentierte Angriffe das Konzept beeinflussen." },
        "ExternalReference": { "type": "string", "description": "Externe Referenz zu weiterführender Dokumentation." },
        "Description": { "type": "string", "description": "Weitere Beschreibung des Sicherheitskonzepts." }
      }
    },
    "SecurityGoal": {
      "type": "object",
      "description": "SecurityGoal represents the concept-level cybersecurity requirement associated with one or more threat scenarios defined in ISO21434. Its purpose is to define how to reduce the risk associated with the threat scenario to an acceptable level. The SecurityGoal is defined through one or several associated requirement elements. A CAL shall be assigned to each SecurityGoal, to represent the assurance level at which the SecurityGoal must be met.",
      "required": ["ShortName", "Name", "ThreatClassification"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname des Sicherheitsziels." },
        "Name": { "type": "string", "description": "Ausführlicher Name des Sicherheitsziels." },
        "ThreatClassification": {
          "type": "string",
          "description": "Klassifikation der Bedrohung, z. B. anhand von numerischen Werten. CAL classification scheme can be used to determine the level of rigour with which cybersecurity activities are performed, in terms of the effort necessary to provide the required assurance.",
          "enum": ["1", "2", "3", "4"]
        },
        "Description": { "type": "string", "description": "Weitere Beschreibung des Sicherheitsziels." },
        "requirements": {
          "type": "array",
          "description": "Liste der Anforderungen, die aus dem Sicherheitsziel abgeleitet sind.",
          "minItems": 1,
          "items": { "$ref": "#/definitions/Requirement" }
        }
      }
    },
    "Hazard": {
      "type": "object",
      "description": "The Hazard metaclass represents a condition or state in the system that may contribute to accidents. The Hazard is caused by malfunctioning behavior of E/E safety-related systems including interaction of these systems. The Hazard does not address hazards such as electric shock, fire, smoke, heat, radiation, toxicity, flammability, reactivity, corrosion, release of energy, and similar hazards unless directly caused by malfunctioning behavior of safety related electrical/electronic systems.",
      "required": ["ShortName", "Name"],
      "properties": {
        "ShortName": { "type": "string", "description": "Kurzname der Gefahr." },
        "Name": { "type": "string", "description": "Ausführlicher Name der Gefahr." },
        "Description": { "type": "string", "description": "Weitere Beschreibung der potenziellen Gefahr." }
      }
    },
    "Requirement": {
      "type": "object",
      "description": "Definiert eine Anforderung, die aus einem Sicherheitsziel abgeleitet ist. The Requirement represents a capability or condition that must (or should) be satisfied. A Requirement can also specify an informal constraint, e.g. The development of the component X must be according to the standard Y, or The realization of this function as a software component must adhere to the scope and external interface as specified by this function. It will be used to unite the common properties of specific requirement types.",
      "required": ["Name"],
      "properties": {
        "Name": { "type": "string", "description": "Name der Anforderung." },
        "Description": { "type": "string", "description": "Detailierte Beschreibung der Anforderung." }
      }
    }
  }
}